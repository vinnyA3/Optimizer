{"version":3,"sources":["node_modules/marked/lib/marked.js","src/templates/overview.js","src/main.js"],"names":["root","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","Lexer","options","tokens","links","Object","create","marked","defaults","rules","normal","pedantic","gfm","tables","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","_comment","merge","lex","src","lexer","prototype","token","top","next","loose","cap","bull","b","listStart","listItems","t","space","i","tag","l","isordered","istask","ischecked","exec","substring","length","push","type","rtrim","lang","depth","header","splitCells","align","split","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","undefined","task","checked","sanitize","pre","sanitizer","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","encode","escapeTest","escapeReplace","ch","replacements","escapeTestNoEncode","escapeReplaceNoEncode","unescape","_","n","String","fromCharCode","parseInt","regex","opt","name","val","resolveUrl","base","baseUrls","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","output","out","prevCapZero","mangle","inLink","inRawBlock","trim","outputLink","escapes","codespan","smartypants","image","Math","random","toString","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","xhtml","body","listitem","checkbox","tablerow","content","tablecell","flags","prot","decodeURIComponent","e","baseUrl","originIndependentUrl","encodeURI","parse","parser","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","obj","target","key","arguments","hasOwnProperty","call","tableRow","count","offset","str","curr","splice","c","invert","suffLen","currChar","substr","callback","pending","done","err","message","silent","setOptions","getDefaults","inlineLexer","module","exports","define","amd","window","global","mainContent","document","getElementById","innerHTML","overview"],"mappings":"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","file":"main.815e7d2a.map","sourceRoot":"..","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s])__(?!_)|^\\*\\*([^\\s])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_)|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_)|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])[\\s\\S]*?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|$', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|$')\n    .getRegex()\n});\n\ninline.gfm.url = edit(inline.gfm.url)\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n}\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n}\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(this.token.checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch] });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch] });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n}\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","module.exports = `\n<h3 id=\"overview\">Overview</h3>\n<p>Optimizer provides C++ solutions to optimization problems.  The goal is to build an Optimization library for C++ which can provide solutions for single variable and multi-variable optimization, constrained and unconstrained problems. The users should be able to select the algorithm to be used and also access any intermediate data which is obtained whilst running the algorithm.</p>\n<h3 id=\"a-simple-first-program\">A simple first program</h3>\n<pre><code><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;Eigen/Dense&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">\"../Optimizer/optimizer\"</span></span>\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> <span class=\"hljs-built_in\">std</span>;\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> Eigen;\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> Optimizer;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">main</span> <span class=\"hljs-params\">()</span> </span>{\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Using Function: (x + 10)^2 for single variable algorithms testing.\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n  <span class=\"hljs-keyword\">double</span> ipt = <span class=\"hljs-number\">5.4</span>;\n\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Test Bounding Phase:\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n  Vector2d range = BoundingPhase(func, ipt);\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Range from bounding Phase for initial point :\"</span> &lt;&lt; ipt &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; range &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Test Exhaustive Search:\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n  range = Exhaustive(func, ipt);\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Range from Exhaustive Search for initial point :\"</span> &lt;&lt; ipt &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; range &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Derivatives at \"</span> &lt;&lt; ipt &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; Derivative(func, ipt) &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Finding optimal point using above range for Newton Rapshon Method.\"</span> &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; <span class=\"hljs-string\">\"Optimal Point is: \"</span>;\n  <span class=\"hljs-built_in\">cout</span> &lt;&lt; NewtonRapshon (func, range) &lt;&lt; <span class=\"hljs-built_in\">endl</span>;\n}</code></pre>\n`","import './styles/main.scss';\nimport marked from 'marked';\nimport overview from './templates/overview';\n\nconst mainContent = document.getElementById('content');\nmainContent.innerHTML = overview;\n"]}